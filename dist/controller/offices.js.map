{"version":3,"sources":["../../app/controller/offices.js"],"names":["officeController","createOffice","req","res","body","type","name","send","status","error","id","officeDb","length","push","response","data","getOffices","getOffice","officeId","params","i","parseInt"],"mappings":";;;;;;;AAAA;;;;AAEA,IAAMA,gBAAgB,GAAG;AACvBC,EAAAA,YADuB,wBACVC,GADU,EACLC,GADK,EACA;AAAA,oBACED,GAAG,CAACE,IADN;AAAA,QACbC,IADa,aACbA,IADa;AAAA,QACPC,IADO,aACPA,IADO;;AAErB,QAAI,CAACA,IAAD,IAAS,CAACD,IAAd,EAAoB;AAClB,aAAOF,GAAG,CAACI,IAAJ,CAAS;AAAEC,QAAAA,MAAM,EAAE,GAAV;AAAeC,QAAAA,KAAK,EAAE;AAAtB,OAAT,CAAP;AACD;;AACD,QAAMC,EAAE,GAAGC,iBAASC,MAAT,GAAkB,CAA7B;AACAV,IAAAA,GAAG,CAACE,IAAJ,CAASM,EAAT,GAAcA,EAAd;;AACAC,qBAASE,IAAT,CAAcX,GAAG,CAACE,IAAlB;;AACA,QAAMU,QAAQ,GAAG;AAAEN,MAAAA,MAAM,EAAE,GAAV;AAAeO,MAAAA,IAAI,EAAE,CAACJ,iBAASD,EAAE,GAAG,CAAd,CAAD;AAArB,KAAjB;AACA,WAAOP,GAAG,CAACI,IAAJ,CAASO,QAAT,CAAP;AACD,GAXsB;AAavBE,EAAAA,UAbuB,sBAaZd,GAbY,EAaPC,GAbO,EAaF;AACnB,WAAOA,GAAG,CAACI,IAAJ,CAAS;AAAEC,MAAAA,MAAM,EAAE,GAAV;AAAeO,MAAAA,IAAI,EAAEJ;AAArB,KAAT,CAAP;AACD,GAfsB;AAgBvBM,EAAAA,SAhBuB,qBAgBbf,GAhBa,EAgBRC,GAhBQ,EAgBH;AAAA,QACVe,QADU,GACGhB,GAAG,CAACiB,MADP,CACVD,QADU;;AAElB,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,iBAASC,MAA7B,EAAqCQ,CAAC,IAAI,CAA1C,EAA6C;AAC3C,UAAIT,iBAASS,CAAT,EAAYV,EAAZ,KAAmBW,QAAQ,CAACH,QAAD,EAAW,EAAX,CAA/B,EAA+C;AAC7C,eAAOf,GAAG,CAACI,IAAJ,CAAS;AAAEC,UAAAA,MAAM,EAAE,GAAV;AAAeO,UAAAA,IAAI,EAAE,CAACJ,iBAASS,CAAT,CAAD;AAArB,SAAT,CAAP;AACD;AACF;;AACD,WAAOjB,GAAG,CAACI,IAAJ,CAAS;AAAEC,MAAAA,MAAM,EAAE,GAAV;AAAeC,MAAAA,KAAK,2BAAoBS,QAApB;AAApB,KAAT,CAAP;AACD;AAxBsB,CAAzB;eA4BelB,gB","sourcesContent":["import officeDb from '../db/offices';\r\n\r\nconst officeController = {\r\n  createOffice(req, res) {\r\n    const { type, name } = req.body;\r\n    if (!name || !type) {\r\n      return res.send({ status: 400, error: 'Kindly enter all fields' });\r\n    }\r\n    const id = officeDb.length + 1;\r\n    req.body.id = id;\r\n    officeDb.push(req.body);\r\n    const response = { status: 201, data: [officeDb[id - 1]] };\r\n    return res.send(response);\r\n  },\r\n  \r\n  getOffices(req, res) {\r\n    return res.send({ status: 200, data: officeDb });\r\n  },\r\n  getOffice(req, res) {\r\n    const { officeId } = req.params;\r\n    for (let i = 0; i < officeDb.length; i += 1) {\r\n      if (officeDb[i].id === parseInt(officeId, 10)) {\r\n        return res.send({ status: 200, data: [officeDb[i]] });\r\n      }\r\n    }\r\n    return res.send({ status: 404, error: `Office with id ${officeId} not found` });\r\n  }\r\n \r\n};\r\n\r\nexport default officeController;"],"file":"offices.js"}