{"version":3,"sources":["../../app/test/office.test.js"],"names":["chai","use","chaiHttp","should","describe","invalidData","type","validData","name","it","done","request","server","post","send","end","req","res","body","be","a","status","equal","include","keys","error","data","length","get","invalidId","validId"],"mappings":"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","sourcesContent":["import chai from 'chai';\r\nimport chaiHttp from 'chai-http';\r\nimport server from '../server';\r\n\r\nchai.use(chaiHttp);\r\n// eslint-disable-next-line no-unused-vars\r\nconst should = chai.should();\r\n\r\ndescribe('Offices endpoints', () => {\r\n  describe('POST /api/v1/offices', () => {\r\n    const invalidData = {\r\n      type: 'National',\r\n    };\r\n\r\n    const validData = {\r\n      type: 'National',\r\n      name: 'President',\r\n    };\r\n    it('should return a validation error for missing fields', (done) => {\r\n      chai.request(server)\r\n        .post('/api/v1/offices')\r\n        .send(invalidData)\r\n        .end((req, res) => {\r\n          res.body.should.be.a('object');\r\n          res.body.status.should.equal(400);\r\n          res.body.should.include.keys('error');\r\n          res.body.error.should.equal('Kindly enter all fields');\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('should create new political office and return success response', (done) => {\r\n      chai.request(server)\r\n        .post('/api/v1/offices')\r\n        .send(validData)\r\n        .end((req, res) => {\r\n          res.body.should.be.a('object');\r\n          res.body.status.should.equal(201);\r\n          res.body.should.include.keys('data');\r\n          res.body.data.should.be.a('array');\r\n          res.body.data.length.should.equal(1);\r\n          done();\r\n        });\r\n    });\r\n  });\r\n  describe('GET /api/v1/offices', () => {\r\n    it('should get all offices', (done) => {\r\n      chai.request(server)\r\n        .get('/api/v1/offices')\r\n        .end((req, res) => {\r\n          res.body.should.be.a('object');\r\n          res.body.status.should.equal(200);\r\n          res.body.should.include.keys('data');\r\n          res.body.data.should.be.a('array');\r\n          done();\r\n        });\r\n    });\r\n  });\r\n  describe('GET /api/v1/offices/:id', () => {\r\n    const invalidId = 'xx';\r\n    const validId = 1;\r\n    it('should return an office not found response', (done) => {\r\n      chai.request(server)\r\n        .get(`/api/v1/offices/${invalidId}`)\r\n        .end((req, res) => {\r\n          res.body.should.be.a('object');\r\n          res.body.status.should.equal(404);\r\n          res.body.should.include.keys('error');\r\n          res.body.error.should.equal(`Office with id ${invalidId} not found`);\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('should return a single office record', (done) => {\r\n      chai.request(server)\r\n        .get(`/api/v1/offices/${validId}`)\r\n        .end((req, res) => {\r\n          res.body.should.be.a('object');\r\n          res.body.status.should.equal(200);\r\n          res.body.should.include.keys('data');\r\n          res.body.data.should.be.a('array');\r\n          res.body.data.length.should.equal(1);\r\n          done();\r\n        });\r\n    });\r\n  });\r\n\r\n});"],"file":"office.test.js"}